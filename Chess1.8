#include <iostream>
#include <string>
//#include <vector>
#include <windows.h>        //Sound effects!
#include <conio.h>
using namespace std;

static string map[110][32];
static int xMove,yMove;     //The position of the "green square", the values are from 1 to 8
static char player;         //It can be 'w' or 's', it changes everytime a player make a valid play
static int selX, selY;      //Actual selected player position
static int wDeads,sDeads;   //Number of dead pieces
static string dead[2][16];  //Dead piece collector, [0][i] is for weiss, [1][i] for schwarz
static string note;         //Something you want to say? You could change this note... but most likely it wont work
static int generalColor=10, selectorColor=32;

/* Bugs!:
 * I think the reviver still doesnt work properly... Im not sure :P
 *
 *
 * Notes!
 * Hey! tambien seria muy genial si hicieras una pantalla de inicio, no debe ser
 * muy dificil, y va a atraer bastante la atencion. AÃ±ade en ella una seccion ayuda
 * donde muestras los controles... Quiza hasta dejas que el usuario los cambie... jejeje
 *
 * En Opciones podrias dejar al usuario cambiar el tipo de letra... Complicado
 * pero posible, Pista: "SetCurrentConsoleFontEx"
 *
 * En esa pantalla el usuario tambien podria escribir su nombre, y puedes implementar algo tan
 * bonito como un teclado en pantalla y solo aceptar nombres de 3 digitos. Proceso el cual se
 * puede pasar de alto, pero te dara algun nombre gracioso.
 *
 * Quiza que cada pieza tenga un color distinto? Puedes hacer eso?? NOPE, mejor no jueges
 * con esa parte del codigo -.-
 *
 * Un easter egg en la pantalla de inicio!!!! El codigo conami activaria una animacion!!!
 * Quiza tu animacion gato o algo asi... Implementado!! Muajajaja
 *
 * Pinchi codigo konami! A ver, estoy intentando guardar todo lo que el usuario tipea en
 * una variable, para luego compararla con el codigo konami, creo que la funcion "find"
 * es la culpable de mis desgracias, arreglala plis. Arreglado ;)
*/


void settings(){
    int in=0;
    int move=0;
    string options[2] = {"Change the general colors","Change the selector colors"};

    do{
        system("cls");
        cout << in;
        SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), generalColor);
        for (unsigned int i = 0; i < 2; ++i) {
            if(move == i){
                SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), selectorColor);
                cout << options[i]<<endl;
                SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), generalColor);
            } else
                cout << options[i]<<endl;
        }


        in = getch();
        if(in=='w' || in =='H'){
            move--;}
        if(in=='s' || in =='P'){
            move++;}
        if(move < 0)
            move = 2-1;
        if(move > 2-1)
            move = 0;
    }while((in!=13));
}

void cat(){
    int x = 4;
    for (int i = 0;i<10;i++) {
        cout << "\t\t\t     ..                                                            " << endl;cout << "\t\t\t     yH+                                                           " << endl;cout << "\t\t\t     -HH:                                          +               " << endl;cout << "\t\t\t      oHH+                                        yHssN/           " << endl;cout << "\t\t\t       +NHh-                                     yHHHHHo.          " << endl;cout << "\t\t\t        .hHHNy+:-`                              yHHHHHHHHy         " << endl;cout << "\t\t\t          .+hNHHHHNds+.                        /HHHHHHHHHHh        " << endl;cout << "\t\t\t              `-/ohNHHHmyyhhyyyysoo/:-..``./ohNHHHHHHHHmho`        " << endl;
        cout << "\t\t\t                   `/mHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHs`            " << endl;cout << "\t\t\t                    /NHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHs              " << endl;cout << "\t\t\t                   sHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHN`              " << endl;cout << "\t\t\t              `./smHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH+               " << endl;cout << "\t\t\t            `hHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHs                " << endl;cout << "\t\t\t           :NHHHHHHHHHHHHHHHHHHNNNNNNmmHHHHHHHHHHH.                " << endl;cout << "\t\t\t          +HHHNhhhhhsmHHHHHHHy-        -sdHHHHHHHH+                " << endl;cout << "\t\t\t      .ohmHHd/`     .HHHHm+:`             /HHN:NHHm                " << endl;
        cout << "\t\t\t     `ddhhs-         .hHHN`               dho. `dHHs               " << endl;cout << "\t\t\t                       -dHm++.                   oHHNN+            " << endl;cout << "\t\t\t                         /hdhs                    .:::.            " << endl;    Sleep(100/x);system("color 0a");system("cls");cout<<"\n\n\n\n";
        cout << "\t\t\t       sy                                                             " << endl;cout << "\t\t\t        HH+                                                           " << endl;cout << "\t\t\t        NHh                                        .   `              " << endl;cout << "\t\t\t        :HHo                                      :N--yy              " << endl;cout << "\t\t\t         oHHh-                                   `dHHHH/`             " << endl;cout << "\t\t\t          :hNHmy+:                              `dHHHHHHN+            " << endl;cout << "\t\t\t             :sdNHHNdo:                         sHHHHHHHHHs           " << endl;cout << "\t\t\t                 `:smHHNs:::----`          `-/smHHHHHHHHHmo           " << endl;
        cout << "\t\t\t                     +NHHHHHHHHHHHHHNNNNNNNHHHHHHHHHHN/.              " << endl;cout << "\t\t\t                     :HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH+                " << endl;cout << "\t\t\t                    `NHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHo                 " << endl;cout << "\t\t\t                    sHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHy                  " << endl;cout << "\t\t\t                .::+NHHHHHHHHHHHHHHHHHHHHHHHHHHHHHd.                  " << endl;cout << "\t\t\t               -HHHHHHHHHHHHmNHHHHHHHHHHHHHHHHHHHHy/`                 " << endl;cout << "\t\t\t               sHHHHHHHHNh+`      `..--:::HHHHyyhdNHHs                " << endl;cout << "\t\t\t               oHHHHHs:.                  oHHH`   /Hd/                " << endl;
        cout << "\t\t\t            :yhHHyHHH:                    `NHd                        " << endl;cout << "\t\t\t            syyo- sHHo:                    /HHms                      " << endl;cout << "\t\t\t                  `dNNNo                    ---.                      " << endl;Sleep(100/x);system("color 0b");system("cls");cout<<"\n\n\n\n";cout << "\t\t\t          -ho                                                        " << endl;cout << "\t\t\t        `mHs                                                         " << endl;
        cout << "\t\t\t        -HHh                                      `:                 " << endl;cout << "\t\t\t        `HHH-                                    `dH/oh              " << endl;cout << "\t\t\t         /NHNo`                                 `hHHHHd:`            " << endl;cout << "\t\t\t          .smHHdhs/-                           `dHHHHHHHN-           " << endl;cout << "\t\t\t             -+shmHHHh:                        sHHHHHHHHHN:          " << endl;cout << "\t\t\t                  `omHHm-                  ./smHHHHHHHHmdo`          " << endl;cout << "\t\t\t                    `dHHHmmmNNNmmmddhhyhhhNHHHHHHHHHHs`              " << endl;cout << "\t\t\t                    -NHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH+                " << endl;
        cout << "\t\t\t                   :HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHy                 " << endl;cout << "\t\t\t                  /HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHm`                 " << endl;cout << "\t\t\t                 /HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHm`                  " << endl;cout << "\t\t\t              `/dHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHdo-                " << endl;cout << "\t\t\t            `dHHHHHHHHHHHHHHHy///+oyhhyHHHHo/-+yhdNHHNho.            " << endl;cout << "\t\t\t            +HHNo::-.ohmHHHHHy/       -HHH/         ./yHHo`          " << endl;cout << "\t\t\t            yHH/        `-/ohNHd`     +HHd             `/+.          " << endl;cout << "\t\t\t            NHm              `yNo     yHHy:                          " << endl;
        cout << "\t\t\t           `mNNy                      -ooo/                          " << endl;Sleep(100/x);system("color 0c");system("cls");cout<<"\n\n\n\n";cout << "\t\t\t        sy                                                            " << endl;
        cout << "\t\t\t        sHH`                                                          " << endl;cout << "\t\t\t        hHH.                                      :o  :`              " << endl;cout << "\t\t\t        +HHm-                                    -NHdmd               " << endl;cout << "\t\t\t         +NHHdo:`                               .mHHHHNy/             " << endl;cout << "\t\t\t           :odHHHmh+-                           dHHHHHHHHs            " << endl;cout << "\t\t\t              `-ohNHHm+                       -sHHHHHHHHHH:           " << endl;cout << "\t\t\t                  `+mHHm///////:--...`````.+hNHHHHHHHHdyo-            " << endl;cout << "\t\t\t                    `dHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHN:                " << endl;
        cout << "\t\t\t                    sHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH:                 " << endl;cout << "\t\t\t                  .dHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHs                  " << endl;cout << "\t\t\t                .sHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHd`                  " << endl;cout << "\t\t\t            .+ymHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH-                   " << endl;cout << "\t\t\t           yHHHHHHHHHHHHHHHHHHHHHmdmNNNHHHHHmhHHHHm`                  " << endl;cout << "\t\t\t         `hHHHHmmmmmdho:yHHHHHm/      +HHHs`  -dHHHm`                 " << endl;cout << "\t\t\t        -dHHNs.         NHHHHm`      .NHN/      -hHHN/                " << endl;cout << "\t\t\t      -hHHh:            -yNHHHd-   -yNHN-         -yHHy+:             " << endl;
        cout << "\t\t\t     +Hmo.                 :sNHHo+-syo+.            -hNNm/            " << endl;cout << "\t\t\t      `                       /hdhs`                                  " << endl;Sleep(100/x);system("color 0d");system("cls");cout<<"\n\n\n\n";cout << "\t\t\t    mH-                                                         " << endl;
        cout << "\t\t\t   .HHo                                                         " << endl;cout << "\t\t\t    NHm.                                        -   `           " << endl;cout << "\t\t\t    :NHN+.                                     sH/om:           " << endl;cout << "\t\t\t     .hHHHdo:`                                yHHHHNo.          " << endl;cout << "\t\t\t       `/sdNHHNdy+-                          +HHHHHHHH+         " << endl;cout << "\t\t\t            ./sdHHHm+                       .mHHHHHHHHHs        " << endl;cout << "\t\t\t                `+mHHNsyhhhhyso/:.`     -+ymHHHHHHHHNdo`        " << endl;cout << "\t\t\t                  `NHHHHHHHHHHHHHHHHHNNNHHHHHHHHHHd.            " << endl;
        cout << "\t\t\t                 .mHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHN.             " << endl;cout << "\t\t\t                +NHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH/              " << endl;cout << "\t\t\t          `-:+hNHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHy               " << endl;cout << "\t\t\t         +NHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHs                " << endl;cout << "\t\t\t        yHHHHHHHHHNdNHHHHHHHHHNNNNHHHHHHHHHHHH/                 " << endl;cout << "\t\t\t      .hHHm+.``..``oHHHHHHNy-      `/yNHHHHHHHo                 " << endl;cout << "\t\t\t    ymHHd/        oHHHHds:`            /NHHNHHN.                " << endl;cout << "\t\t\t   +++/.           sHHHo              `NHdo`+HHh                " << endl;
        cout << "\t\t\t                    -dHH+/-            .`    -mHHN/             " << endl;cout << "\t\t\t                      :hmmd-                  `..`              " << endl;Sleep(100/x);system("color 0e");system("cls");cout<<"\n\n\n\n";
        cout << "\t\t\t                                                                   " << endl;cout << "\t\t\t /m+                                                                 " << endl;cout << "\t\t\t :HHo                                          ..                    " << endl;cout << "\t\t\t  sHHh.                                       -Nd:os                 " << endl;cout << "\t\t\t   .yHHy:`                                   `mHHHHh-                " << endl;cout << "\t\t\t     .sNHHdyo+-                             `dHHHHHHHm.              " << endl;cout << "\t\t\t        -:+ymNHHNho:                        :HHHHHHHHHN-             " << endl;cout << "\t\t\t              `:+dHHms:-:///::--...```` `-+yNHHHHHHNdh+              " << endl;
        cout << "\t\t\t                  .yHHHHHHHHHHHHHHHHHHHHHHHHHHHHHN/`                 " << endl;cout << "\t\t\t                  :NHHHHHHHHHHHHHHHHHHHHHHHHHHHHH.                   " << endl;cout << "\t\t\t                  hHHHHHHHHHHHHHHHHHHHHHHHHHHHHHs                    " << endl;cout << "\t\t\t              oho:mHHHHHHHHHHHHHHHHHHHHHHHHHHHHm                     " << endl;cout << "\t\t\t             `HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHN:                     " << endl;cout << "\t\t\t             .HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHm+.                    " << endl;cout << "\t\t\t              dHHHHHHHHHHdo+/:--..`...yHHHHNHHHHHN/                  " << endl;cout << "\t\t\t              mHHHHmyo/:              -HHH/    :Hm:                  " << endl;
        cout << "\t\t\t             yHHHHm                    dHH-     -`                   " << endl;cout << "\t\t\t            `yo.NHd`                   .NHNm/                        " << endl;
        cout << "\t\t\t                +mNN/                    ...                         " << endl;Sleep(100/x);
        system("cls");cout<<"\n\n\n\n";
        cout << "\t\t\t                                                                   " << endl;cout << "\t\t\t.ds`                                             /`  -               " << endl;cout << "\t\t\t`mHm:                                           +HdsN+               " << endl;cout << "\t\t\t`sHHh/`                                       :HHHHHy:               " << endl;cout << "\t\t\t  -hHHNho:.                                  .HHHHHHHHh              " << endl;cout << "\t\t\t    .+hNHHHHNdhso:`                          yHHHHHHHHHh             " << endl;cout << "\t\t\t        .:/shdNHHHHd+``.---...`          .:omHHHHHHHNhs.             " << endl;cout << "\t\t\t               `:smHHHHHHHHHHHHHHNNmmddmHHHHHHHHHHN/                 " << endl;
        cout << "\t\t\t                  sHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH-                  " << endl;cout << "\t\t\t                 .HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHs                   " << endl;cout << "\t\t\t                 dHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHh                    " << endl;cout << "\t\t\t               `hHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHN`                    " << endl;cout << "\t\t\t             :yHHHHHHHHHHHHHHHHHHHHHHHHHHmmHHHHHds:`                 " << endl;cout << "\t\t\t           `dHHHHHHHHHHHHHd/:::::::+HHHN:  -+sydNHHHms:              " << endl;cout << "\t\t\t           hHHHHmhso/:`-yHHh       /HHN-         ./sdHHh:            " << endl;cout << "\t\t\t          oHHN/`         /HH.      sHH:               /sy.           " << endl;
        cout << "\t\t\t         `NHd`            -+`      hHHy.                             " << endl;cout << "\t\t\t         .HHHh                     .///`                             " << endl;cout << "\t\t\t          ```                                                        " << endl;Sleep(100/x);
        system("cls");cout<<"\n\n\n\n";
        cout << "\t\t\t.                                                                   " << endl;cout << "\t\t\t:Hm-                                                                " << endl;cout << "\t\t\tyHH+                                           -d``/.               " << endl;cout << "\t\t\t/NHm+`                                       -NHNHd                 " << endl;cout << "\t\t\t  `oNHNy+-                                   -NHHHHHNy`             " << endl;cout << "\t\t\t     /hHHHHds/.                              mHHHHHHHHd.            " << endl;cout << "\t\t\t       `/sdNHHHms:                         .yHHHHHHHHHH/            " << endl;cout << "\t\t\t            -odHHHNo://+++///::--......-/yNHHHHHHHNhs+-             " << endl;
        cout << "\t\t\t               `+mHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHN.                 " << endl;cout << "\t\t\t                 oHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH-                  " << endl;cout << "\t\t\t                yHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHm                   " << endl;cout << "\t\t\t              `hHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH                   " << endl;cout << "\t\t\t           ./sNHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHm                   " << endl;cout << "\t\t\t          sHHHHHHHHHHHHHHHHHHNNmmdHHHHHdddddHHHHh                   " << endl;cout << "\t\t\t        `dHHHNhhhyysoNHHHHHd/    -HHHm:     oNHHHh`                 " << endl;cout << "\t\t\t       .mHHd:       :HHHHy-      yHHy`       .sNHHm.                " << endl;
        cout << "\t\t\t      /NHd:          .yHHN/   -ohHH+           `+NHH+``             " << endl;cout << "\t\t\t    `hHN+              .yHHy++sys+-              `+mHHH:            " << endl;cout << "\t\t\t    .+:`                 .shhy-                     `.`             " << endl;system("cls");cout<<"\n\n\n\n";
    }
}


///startMenu()
/* It shows a startMenu to the user. Here the user can start a New Game, see the
 * how to play the game (in "help") or maybe find an easter egg... There is still a lot to implement
 */
void startMenu(){
    string options[5] = {" Start new Game "," Load "," Options "," Help "," Exit "};
    int in=0;
    int move=0;
    bool exit=false;
    string interaction;
    int interactionCounter=0;
    do{
        system("cls");
        SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), generalColor);
        cout<<"\n\n\t\t\t .d8888b.           888                        888\n\t\t\td88P  Y88b          888                        888\n\t\t\tY88b.               888                        888\n\t\t\t \"Y888b.    .d8888b 88888b.   8888b.   .d8888b 88888b.\n\t\t\t    \"Y88b. d88P\"    888 \"88b     \"88b d88P\"    888 \"88b\n\t\t\t      \"888 888      888  888 .d888888 888      888  888\n\t\t\tY88b  d88P Y88b.    888  888 888  888 Y88b.    888  888\n\t\t\t \"Y8888P\"   \"Y8888P 888  888 \"Y888888  \"Y8888P 888  888\n\n"<<endl;
        for ( int i = 0;i < 5;i++) {
            cout << "\n\t\t\t\t\t   ";
            if (i == 1||i == 3||i == 4)
                cout<<"    ";
            if (i == 2)
                cout<<"   ";
            if(in==13 || in==32)
                options[i].erase(options[i].begin()+1, options[i].end()-1);
            if (i == move){
                cout << " ";
                SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), selectorColor);
                cout << ">"<<options[i] << "<\n";
                SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), generalColor);
            } else
                cout << "  "<<options[i]<<endl;
        }
        in = char(getch());
        interaction+=to_string(in)+" ";
        interactionCounter++;
        if(in=='w' || in =='H'){
            move--;}
        if(in=='s' || in =='P'){
            move++;}
        if(move < 0)
            move = 4;
        if(move > 4)
            move = 0;
        
        //Konami?
        if (interactionCounter>17){
            string knm="-32 72 -32 72 -32 80 -32 80 -32 75 -32 77 -32 75 -32 77 98 97 ";
            unsigned int space = interaction.find(' ');
            if (knm==interaction)
                cat();
            else
                interaction.erase(0,space+1);
        }

        if(in==13 || in==32){
            system("cls");
            cout<<"\n\n\t\t\t .d8888b.           888                        888\n\t\t\td88P  Y88b          888                        888\n\t\t\tY88b.               888                        888\n\t\t\t \"Y888b.    .d8888b 88888b.   8888b.   .d8888b 88888b.\n\t\t\t    \"Y88b. d88P\"    888 \"88b     \"88b d88P\"    888 \"88b\n\t\t\t      \"888 888      888  888 .d888888 888      888  888\n\t\t\tY88b  d88P Y88b.    888  888 888  888 Y88b.    888  888\n\t\t\t \"Y8888P\"   \"Y8888P 888  888 \"Y888888  \"Y8888P 888  888\n\n\n"<<endl;
            switch (move) {
            case 0:exit = true;break;
            case 1:;cout<<"Not implemented jet\n";in = 1;getch();break;
            case 2:settings();in = 1;break;
            case 3:cout<<"\t\tWelcome to \"Schach\", a chess game made in C++\n\n"
                         "\t\tTo move your selector you can use the arroy keys or the \"wasd\" keys\n\n"
                         "\t\tw = up\n"
                         "\t\ts = down\n"
                         "\t\ta = left\n"
                         "\t\td = right\n\n"
                         "\t\tTo select a piece you need to press \"enter\" or the \"spacebar\"\n"
                         "\t\tTo pause the game you need to press \"esc\" or \"alt+f4\"\n";in = 1;getch();break;
            case 4:cout<<"\t\t\t\t\t\tBye!\n\n";terminate();
            }

        }
    }while (exit == false);
}


/// ShowMap(int x, int y)
/* Shows the Chess Table, "x" and "y" is the position of the actual
 * square where the user is pointing, this square will appear green on the output.
 *
 * The input can be a number from 1 to 8
 */
void showMap(int x, int y){
    system("cls");
    if(player == 'w')
        map[80][6]="\tWeiÃ ist dran";
    else
        map[80][6]= "\tSchwarz ist dran";
    
    //This shows the eliminated players
    map[80][9] = "\t";  //It reset this position with a tab, why? Well... just accept it
    map[80][24] = "\t";
    map[80][8]="\tDEADS WEISS:";
    for (int i = 0;i<=wDeads;i++)   //Shows white eliminated playersx
        map[80][9] += dead[0][i]+" ";
    map[80][23]="\tDEADS SCHWARZ:";
    for (int i = 0;i<=sDeads;i++)
        map[80][24] += dead[1][i]+" ";
    
    
    string temp="";            //We save in this temp a secuence of the string "map", so it doesnt need to
    for (int i=3;i<30;i++) {   //call print each time a "char" comes, but each time a "string" comes... it is faster to print
        for (int j=0;j<81;j++){
            if (i>3){   //So werden wir die farbe von "abc" nicht Ã¤ndern
                //Change the color of the current position
                if(((i-4)/3>y-2 && (i-5)/3<=y-1) && (j/9>x-2 && (j-1)/9<=x-1)){
                    cout << temp;
                    temp = "";
                    SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), BACKGROUND_GREEN);
                    cout << map[j][i];
                    SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), 0);
                    SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), FOREGROUND_INTENSITY);
                    
                    //Change the color of the selected position
                } else if((x!=0&&y!=0)&&(((i-4)/3>selY-2 && (i-5)/3<=selY-1) && (j/9>selX-2 && (j-1)/9<=selX-1))){
                    cout << temp;
                    temp = "";
                    SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), BACKGROUND_BLUE);
                    cout << map[j][i];
                    SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), 0);
                    SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), FOREGROUND_INTENSITY);
                }
                else if (j < 110){
                    temp = temp + map[j][i];    //fill "temp" with chars.
                } else{
                    cout << temp;
                    temp = "";
                }
            }else
                cout << map[j][i];
        }
        cout << temp;
        temp = "";
        cout << endl;
    }
    cout << "\t\t" << note; //Shows a message to the user, like the actual selected piece
}


/// char pause()
/* Shows the user a Screen with the text "Pause"
 * The user can decide whether exit the programm or to continue with the game
 *
 * It return a char so at the end the user will see the map... Its a cheap solution...
 * but "pause()" its only used from the function "moveAround()"
*/
char pause(){
    system("cls");
    cout << "\n\n\n\t\t8888888b.\n\t\t888   Y88b\n\t\t888    888\n\t\t888   d88P 8888b.  888  888 .d8888b   .d88b.\n\t\t8888888P\"     \"88b 888  888 88K      d8P  Y8b\n\t\t888       .d888888 888  888 \"Y8888b. 88888888\n\t\t888       888  888 Y88b 888      X88 Y8b.    d8b d8b d8b\n\t\t888       \"Y888888  \"Y88888  88888P'  \"Y8888 Y8P Y8P Y8P\n"<<endl;
    cout << "\n\t\t     Press 'q' to quit, or press 'enter' to continue.";
    cout << "\n\t\t          Press 'm' to go back to the start menu";
    int in;
    do{
        in = getch();
        if (in==13){
            return 'a';
        }
        else if (in == 113){
            cout << "\n\n\n";
            terminate();
        } else if(char(in)=='m'){
            startMenu();
            break;
        }
    } while (true);
}


/// moveAround(int input)
/* It allows the user to move around the map with the keystrokes
 * when a keystroke its catch, it shows to the user the selected square.
 * It also teletransport the selected square if the user moves it to a limit
 *
 * This function ends when the user press "enter" or "space"
 *
 * This function change the global value of "xMove" and "yMove"
 */
void moveAround(){
    char in;
    do{
        in = char(getch());
        if(in=='a' || in =='K'){ //KMHP ist eine schnelle lÃ¶sung um die Pfeile zu nutzen
            xMove--;}
        if(in=='d' || in =='M'){
            xMove++;}
        if(in=='w' || in =='H'){
            yMove--;}
        if(in=='s' || in =='P'){
            yMove++;}
        if(xMove < 1)
            xMove = 8;
        if(xMove > 8)
            xMove = 1;
        if(yMove < 1)
            yMove = 8;
        if(yMove > 8)
            yMove = 1;
        if(in == 27 || in == 107)
            in = pause();
        if(in=='a'||in=='K'||in=='d'||in=='M'||in=='w'||in=='H'||in=='s'||in=='P'||in==13||in==32){
            system("cls");
            showMap(xMove,yMove);   //Das alles nur um ein besseren "input" von die "Arrows" zu haben
        }
    } while (in!=13 && in!=32); //When it press Enter or space, the last XY position are in xMove and yMove
}


/// xyToPiece(int xInp, int yInp)
/* The Input can be a number from 1 to 8
 *
 * It returns a 2 character String with the piece on the coordinates "xInp,yInp"
 * For example: "wB"
 *  or if there is nothing to show: "  "
 */
string xyToPiece(int xInp, int yInp){   //Der output ist ein String mit der spieler zB.: "wB"
    return map[(xInp*9)-5][(yInp*3)+3]+map[(xInp*9)-4][(yInp*3)+3];
}


/// schachMatt()
/* It is just a stupid function... It activates when the king is killed.
 * If you are lucky, you will hear the mario bross song, that song when mario catchs the flag...
 *
 * It exits the programm when the song ends
 * [[ noreturn ]] means that... well... you know what it means
 */
[[ noreturn ]] void schachMatt(){
    unsigned long x=5;   //Je kleiner desto schneller geht der Lied
    cout<< "\n\n\n\n\n\n\n\n\n\n\t\t\t\t\tââââ        Schachmatt!          ââââ";system("color d7");Beep (196,100);Sleep(125/x);system("cls");cout<< "\n\n\n\n\n\n\n\n\n\n\t\t\t\t\tââââ        Schachmatt!          ââââ";
    system("color ae");Beep (262,100);Sleep(125/x);system("cls");cout<< "\n\n\n\n\n\n\n\n\n\n\t\t\t\t\tââââ        Schachmatt!          ââââ";system("color d7");Beep (330,100);Sleep(125/x);system("cls");cout<< "\n\n\n\n\n\n\n\n\n\n\t\t\t\t\tââââ        Schachmatt!          ââââ";
    system("color ae");Beep (392,100);Sleep(125/x);system("cls");cout<< "\n\n\n\n\n\n\n\n\n\n\t\t\t\t\tââââ        Schachmatt!          ââââ";system("color d7");Beep (523,100);Sleep(125/x);system("cls");cout<< "\n\n\n\n\n\n\n\n\n\n\t\t\t\t\tââââ        Schachmatt!          ââââ";
    system("color ae");Beep (660,100);Sleep(125/x);system("cls");cout<< "\n\n\n\n\n\n\n\n\n\n\t\t\t\t\tââââ        Schachmatt!          ââââ";system("color d7");Beep (784,300);Sleep(575/x);system("cls");cout<< "\n\n\n\n\n\n\n\n\n\n\t\t\t\t\tââââ        Schachmatt!          ââââ";
    system("color ae");Beep (660,300);Sleep(535/x);system("cls");cout<< "\n\n\n\n\n\n\n\n\n\n\t\t\t\t\tââââ        Schachmatt!          ââââ";system("color d7");Beep (207,100);Sleep(125/x);system("cls");cout<< "\n\n\n\n\n\n\n\n\n\n\t\t\t\t\tââââ        Schachmatt!          ââââ";
    system("color ae");Beep (262,100);Sleep(125/x);system("cls");cout<< "\n\n\n\n\n\n\n\n\n\n\t\t\t\t\tââââ        Schachmatt!          ââââ";system("color d7");Beep (311,100);Sleep(125/x);system("cls");cout<< "\n\n\n\n\n\n\n\n\n\n\t\t\t\t\tââââ        Schachmatt!          ââââ";
    system("color ae");Beep (415,100);Sleep(125/x);system("cls");cout<< "\n\n\n\n\n\n\n\n\n\n\t\t\t\t\tââââ        Schachmatt!          ââââ";system("color d7");Beep (523,100);Sleep(125/x);system("cls");cout<< "\n\n\n\n\n\n\n\n\n\n\t\t\t\t\tââââ        Schachmatt!          ââââ";
    system("color ae");Beep (622,100);Sleep(125/x);system("cls");cout<< "\n\n\n\n\n\n\n\n\n\n\t\t\t\t\tââââ        Schachmatt!          ââââ";system("color d7");Beep (830,300);Sleep(575/x);system("cls");cout<< "\n\n\n\n\n\n\n\n\n\n\t\t\t\t\tââââ        Schachmatt!          ââââ";
    system("color ae");Beep (622,300);Sleep(575/x);system("cls");cout<< "\n\n\n\n\n\n\n\n\n\n\t\t\t\t\tââââ        Schachmatt!          ââââ";system("color d7");Beep (233,100);Sleep(125/x);system("cls");cout<< "\n\n\n\n\n\n\n\n\n\n\t\t\t\t\tââââ        Schachmatt!          ââââ";
    system("color ae");Beep (294,100);Sleep(125/x);system("cls");cout<< "\n\n\n\n\n\n\n\n\n\n\t\t\t\t\tââââ        Schachmatt!          ââââ";system("color d7");Beep (349,100);Sleep(125/x);system("cls");cout<< "\n\n\n\n\n\n\n\n\n\n\t\t\t\t\tââââ        Schachmatt!          ââââ";
    system("color ae");Beep (466,100);Sleep(125/x);system("cls");cout<< "\n\n\n\n\n\n\n\n\n\n\t\t\t\t\tââââ        Schachmatt!          ââââ";system("color d7");Beep (587,100);Sleep(125/x);system("cls");cout<< "\n\n\n\n\n\n\n\n\n\n\t\t\t\t\tââââ        Schachmatt!          ââââ";
    system("color ae");Beep (698,100);Sleep(125/x);system("cls");cout<< "\n\n\n\n\n\n\n\n\n\n\t\t\t\t\tââââ        Schachmatt!          ââââ";system("color d7");Beep (932,300);Sleep(575/x);system("cls");cout<< "\n\n\n\n\n\n\n\n\n\n\t\t\t\t\tââââ        Schachmatt!          ââââ";
    system("color ae");Beep (932,100);Sleep(125/x);system("cls");cout<< "\n\n\n\n\n\n\n\n\n\n\t\t\t\t\tââââ        Schachmatt!          ââââ";system("color d7");Beep (932,100);Sleep(125/x);system("cls");cout<< "\n\n\n\n\n\n\n\n\n\n\t\t\t\t\tââââ        Schachmatt!          ââââ";
    system("color ae");Beep (932,100);Sleep(125/x);system("cls");cout<< "\n\n\n\n\n\n\n\n\n\n\t\t\t\t\tââââ        Schachmatt!          ââââ";system("color d7");Beep (1046,575);system("cls");
    startMenu();
}


///revive_O_Matt()
/* This function shows the user a screen where the user can choose what player to revive
 * or simply dont revive any player.
 *
 * This function change the value of the global variable "dead[][]" if the user select a valid piece
 *
 * This function returns a String with the name of the selected piece (for example "wB")
 * If the player doesnt want to revive another player, the function returns a string with
 * two blank spaces "  ";
 *
 * If the player doesnt have any dead pieces, it will also return two blank spaces "  "
 */
string revive_O_Matt(){
    int move=0;
    int limit=0;        //Number of dead pieces of the actual color... i could have used "wDeads"... hmmm
    string tempDead[16];//All dead pieces from the selected Team
    string undead;      //Piece that will revive
    if ((player=='w'&&wDeads==0)||(player=='s'&&sDeads==0)) //Wenn kein spieler
        return "  ";                             //in diesen Team gestorben ist
    for (int i = 0;i < 16;i++) {
        if (player=='s'){
            tempDead[i]=dead[0][i];
            if(limit == 0&&dead[0][i]=="")
                limit = i;
        } else{
            tempDead[i]=dead[1][i];
            if(limit == 0&&dead[1][i]=="")
                limit = i;
        }
        
    }
    tempDead[limit]="I just wanted to stand there"; //This is the last option to print
    int c;
    do{
        system("cls");
        cout << "\n\n\n\t\tooooooooo.                          o8o\n\t\t`888   `Y88.                        `\"'\n\t\t 888   .d88'  .ooooo.  oooo    ooo oooo  oooo    ooo  .ooooo.         88\n\t\t 888ooo88P'  d88' `88b  `88.  .8'  `888   `88.  .8'  d88' `88b        88\n\t\t 888`88b.    888ooo888   `88..8'    888    `88..8'   888ooo888    8888888888\n\t\t 888  `88b.  888    .o    `888'     888     `888'    888    .o        88\n\t\to888o  o888o `Y8bod8P'     `8'     o888o     `8'     `Y8bod8P'        88";
        cout << "\n\n\n\n\t\t\t\tSelect the player that you want to revive:\n";
        cout <<"\n\t\t\t\t";
        for (int i = 0;i <= limit;i++) {
            //Change color of the selected piece
            if(i == move){
                SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), FOREGROUND_RED);
                SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), BACKGROUND_GREEN);
                cout << ">"<<tempDead[i] << "<";
                SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), 0);
                SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), FOREGROUND_INTENSITY);
                cout << "   ";
            }
            else
                cout <<tempDead[i]<< "    "; //Prints the unselected pieces without coloring them
            if (i > 8)
                cout << "\n";   //If there are more than 8 dead pieces... the \n
        }
        c = getch();    //Read keyboard input
        if((char(c)=='a'||char(c)=='K')&&move>0) //Translates keyboard input into movements :P
            move--;
        if((char(c)=='d'||char(c)=='M')&&move<limit)//Left and right
            move++;
        
    }while (c!=13 && c!=32); //Reads a "enter" or a "spacebar"
    
    if (move == limit)      //Wenn der Nutzer die letzte otion wÃ¤hlt
        return "  ";
    else{
        undead = tempDead[move]; //Now "undead" has the name of the selected piece!
        if(player=='w'){
            sDeads--;
            dead[1][move].erase();
            //for (int i = move-1;i<16;i++)
            //    dead[1][i]=dead[1][i+1];
        }
        else{
            wDeads--;
            dead[0][move].erase();
            //for (int i = move-1;i<16;i++)
            //    dead[0][i]=dead[0][i+1];
        }
        return undead;
    }
}


/// selectPlayerFrom()
/* This function uses the function "moveAround()" and it makes an analysis
 * on what it gives back when the user select a square.
 * It cheks if the selected square is empty or it has a player that dont correspond
 * to the actual color that is playing.
 *
 * It only stops when the selected square contains a player that match the actual playing
 * color, and then it writes the position of the selected player on the global variable
 * "selX" and "selY"
 */
void selectPlayerFrom(){
    string choosenPla;
    bool legal=true;
    do{
        moveAround();
        if(xyToPiece(xMove,yMove)[1] == ' '){
            legal = false;
            note = "Du bist kein Luftnomad!";
        }
        else if(xyToPiece(xMove,yMove)[0]!=player){  //"player" is just a character wit the letter
            legal=false;                             //"w" or "s", so here we the color of the
            note = "Du bist nicht dran!";            //selected player. (Im talking about "xyToPiece(xMove,yMove)[0]")
        } else
            legal = true;
    }while(legal == false);
    selX=xMove;
    selY=yMove;
}

/// selectPlayerTo()
/* This function does almost the same as the "selectPlayerFrom()" function, but now
 * it sees if the selected player is an enemy or a empty square.
 * If this is not the case, it will continue to read the keystrokes with "moveAround()"
 *
 * If the selected square is an enemy player or a empty square, it will move the selected
 * player to the selected position
 */
void selectPlayerTo(){
    int x=xMove, y=yMove;
    string choosenPla;
    bool legal;
    bool unselect = false;
    
    do{
        legal = true;
        moveAround();
        choosenPla = xyToPiece(x,y);
        
        if (selX == xMove && selY == yMove){
            unselect = true;                 //If you select in "selectPlayerTo()" the same piece
            selX = 0; selY = 0;              //that you selected in "selectPlayerFrom()", it
            if (player=='w')                 //will "unselect" the player. Thats why we change
                player = 's';                //"player" to the other color, so we have a second chance
            else
                player = 'w';
            note = "Player unselected";
            break;
        } else if (xyToPiece(xMove,yMove)[0] == player){
            note = "Versuche nicht dein Team zu tÃ¶ten...";
            legal = false;
        } else if (xyToPiece(xMove,yMove)[1]=='K'){
            schachMatt();
        }
    } while (legal==false);
    
    //Dead Counter!
    if(xyToPiece(xMove,yMove)[0] != ' '&&unselect == false){
        if (player == 'w')
            dead[0][sDeads++]=xyToPiece(xMove,yMove);
        else
            dead[1][wDeads++]=xyToPiece(xMove,yMove);
    }
    
    //Reviver!!
    if (unselect==false&&xyToPiece(selX,selY)[1] == 'B'&&((player=='w'&&yMove==1)||(player=='s'&&yMove==8))){
        string luckyPlayer=revive_O_Matt();
        if (luckyPlayer != "  "){
            choosenPla[0]=luckyPlayer[0];
            choosenPla[1]=luckyPlayer[1];
        }
        
    }
    
    if (unselect == false){
        map [(x*9)-5][(y*3)+3] = " ";   //Deletes the the player on the previous position
        map [(x*9)-4][(y*3)+3] = " ";
        map [(xMove*9)-5][(yMove*3)+3] = choosenPla[0];  //Put the deleted player on the new position
        map [(xMove*9)-4][(yMove*3)+3] = choosenPla[1];  //(Yes, the player actually dies... the "move sensation" its a lie, its just a delete and a remake the player in the selected square)
    }
}

/// createMap()
/* This function fills the map with the "Grid" and the players.
 * It also set default values for some global variables, so... its perfect to use it
 * as an "reset"!
 */
void createMap(){  //Create "game field"
    int count = 8;
    char count2 = 'a';
    wDeads=0;sDeads=0;
    selX = 0; selY = 0;
    xMove=4; yMove=6;       //So the "green square" will be near to the white pieces at the start
    player='w';
    selX = 0; selY = 0;
    //Create the map!
    
    for (int i = 5; i <=9*8; i++){             //Shows the "abc" that appears on top
        if (i % 9 != 0)                        //i beggins with 5, so at the start we will have only
            map[i][3]=" ";                 //4 blank spaces, not 8.
        else
            map[i][3]=count2++;
    }
    
    for (int i = 5; i<29;i+=3){                //Shows the "123" that appears on one
        map[74][i] = to_string(count);     //Side of the map
        count--;
    }
    
    
    //Creates the "Grid"
    for (int i = 4;i <29;i++){
        for (int j = 0;j<73;j++){
            if (j%9==0&&(i-4)%3==0){
                map[j][i] = "â¬";
            } else if (j%9==0&&(i-4)%3!=0){
                map[j][i] = "â";
            } else if ((i-4)%3==0){
                map[j][i] = "â";
            } else
                map[j][i] = " ";
        }
    }
    
    //Figuren!
    //string testMap[110j][32i];
    count = 0;
    string figuren ="TSLDKLST";
    for (int i = 4; i < 28; i++){
        for (int j = 0; j < 70; j++){
            if (j%9==0){
                if ((i == 6 || i == 27)){
                    map[j+5][i]=figuren[count++]; //Hier kommt TSLDKLST
                }
                
                //Bauern
                if ((i==9)||(i==24)){
                    map[j+5][i]="B";
                }
                
                //WeiÃ oder Schwarz?
                if (i==6||i==9)
                    map[j+4][i]="s";
                else if (i==27||i==24)
                    map[j+4][i]="w";
            }
        }
        count = 0;
    }
}

/// main()
/* main ist main, ta ta darara
  * parapa pa pa main
 */
int main() {
    system("@chcp 65001"); //Unicode!
    createMap();
    startMenu();
    showMap(xMove,yMove); //Shows the map at start

    do{
        //Choose player to move
        selectPlayerFrom();
        string choosenPla = xyToPiece(xMove,yMove);
        note = "\n The choosen Player is: " + choosenPla;
        
        selectPlayerTo();

        selX=0;selY=0;      //reset values, so the blue square dissapears
        showMap(xMove,yMove);
        
        if(player == 'w')
            player = 's';
        else
            player = 'w';
    }while(true);
}
